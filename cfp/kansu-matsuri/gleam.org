#+title: Gleamという選択肢
#+description: Gleamを関数型言語でアプリケーションを構築する際の選択肢として提示する。


** Gleamとは



-----

## 対象とする聴衆のレベル（該当するレベルを記載してください。）

- Beginner: 分野の前提知識を必要としない

## セッションのテーマ（該当するテーマを記載してください。なければ追加頂いて良いです）

- ライブラリやフレームワーク
- 周辺ツール（ビルドツール、静的解析ツール、エディターなど）
- 言語処理系（コンパイラー、インタープリターなど）
- 入門

## セッションの概要

昨年v1に達したGleamという静的型付けな関数型言語があります。
この言語はErlang VM(BEAM)とJavaScript(Node.js/Deno/Bun)で実行でき、ifやforなどが存在しないなど非常にシンプルな構文を持っているという特徴があります。

現在のGleamエコシステムはバックエンドフレームワークであるwispや、フロントエンドフレームワークであるLustreなど様々なライブラリ・フレームワークが登場しています。

また、BEAM実行されるという特徴からBEAMの特徴である耐障害性や並列実行性など備えたアプリケーションを静的型付けの恩恵を受けつつ構築できます。

本登壇を通して始め方や周辺ツールの導入方法からGleamという言語の強みやエコシステムの現状、今後のGleamの可能性などを紹介していきます。


MEMO:

BEAMについて、具体的な導入事例などに触れた方が良さそう。
